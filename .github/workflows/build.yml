name: Sreeson Website CI/CD Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      rollback_version:
        description: 'üí¨ Specify the version to rollback to (e.g., 15 for sreeson/sreeson-ui:15)'
        required: false
        default: ''

jobs:
  build:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: üßë‚Äçüíª Checkout code
        uses: actions/checkout@v2
      - name: üîê Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: üöß Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: sreeson/sreeson-ui:${{ github.run_number }}

  deploy:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: üîíÔ∏è Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 3.98.209.112 >> ~/.ssh/known_hosts
        shell: bash
      - name: üöÄ Deploy to AWS EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@3.98.209.112 "
          set -e
          echo 'Initializing Docker Swarm...'
          docker info | grep 'Swarm: active' || docker swarm init
          echo 'Logging into Docker Hub...'
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          
          echo 'Pulling the Docker image...'
          docker pull sreeson/sreeson-ui:${{ github.run_number }}

          echo 'Updating or creating Docker service...'
          docker service update --image sreeson/sreeson-ui:${{ github.run_number }} sreeson-ui || \
          docker service create --name sreeson-ui --replicas 1 --publish 80:80 --publish 443:443 sreeson/sreeson-ui:${{ github.run_number }}

          echo 'Identifying older images to remove...'
          docker images --format '{{.Repository}}:{{.Tag}}' | grep 'sreeson/sreeson-ui' | sort -r | awk 'NR>2 {print $1}' > old_images.txt
          cat old_images.txt
          echo 'Removing older images except last two...'
          cat old_images.txt | xargs -I {} docker rmi {} --force || echo 'Failed to remove some images due to active usage or other conflicts.'

          echo 'Listing remaining images...'
          docker images
          "
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  rollback:
    if: ${{ github.event.inputs.rollback_version != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: üîíÔ∏è Set up SSH key (Rollback)
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 3.98.209.112 >> ~/.ssh/known_hosts
        shell: bash
      - name: ‚è™Ô∏è Manual Rollback to Specified Version
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@3.98.209.112 "
          echo 'Initiating rollback to version ${{ github.event.inputs.rollback_version }}...'
          docker service update --image sreeson/sreeson-ui:${{ github.event.inputs.rollback_version }} sreeson-ui
          echo 'Rollback completed to version: ${{ github.event.inputs.rollback_version }}'
          echo 'Current available images on the server:'
          docker images
          "
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
